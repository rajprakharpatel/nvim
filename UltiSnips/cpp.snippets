snippet compi "Template for compitetive coding"
#include <bits/stdc++.h>

using namespace std;

#define ll long long
#define MEM(a, b) memset(a, (b), sizeof(a))
#define fo(i, n) for (int i = 0; i < n; i++)
#define FOR(i, j, k, in) for (int i = j; i < k; i += in)
#define RFOR(i, j, k, in) for (int i = j; i > k; i -= in)
#define Fo(i, k, n) for (i = k; k < n ? i < n : i > n; k < n ? i += 1 : i -= 1)
#define all(iter) iter.begin(), iter.end()
#define rall(iter) iter.end(), iter.begin()
#define clr(x) MEM(x, 0)
#define deb(x) cout << #x << "=" << x << endl;
#define deb2(x, y) cout << #x << "=" << x << ", " << #y << "=" << y << endl;
#define sortall(x) sort(all(x))
#define si(x) scanf("%d", &x)
#define sl(x) scanf("%lld", &x)
#define ss(s) scanf("%s", s)
#define pi(x) printf("%d\n", x)
#define pl(x) printf("%lld\n", x)
#define ps(s) printf("%s\n", s)
#define endl "\n"
#define mp make_pair
#define pb push_back
#define INF (int)1e9
#define EPS 1e-9
#define PI 3.1415926535897932384626433832795
#define MOD 1000000007

typedef pair<int, int> pii;
typedef vector<int> vi;
typedef vector<string> vs;
typedef vector<pii> vpii;
typedef vector<vi> vvi;
typedef map<int, int> mii;
typedef set<int> seti;
typedef multiset<int> msi;
typedef stack<int> sti;
typedef queue<int> qi;


// Predefined functions
template <typename T, typename U> inline void amin(T &x, U y) {
  if (y < x)
    x = y;
}
template <typename T, typename U> inline void amax(T &x, U y) {
  if (x < y)
    x = y;
}
int mpow(int base, int exp);
void ipgraph(int n, int m);
void dfs(int u, int par);

const int N = 3e5;
const int mod = 1000000007;
vi g[N];

void solve() { 
	${1}
}

int main() {
  ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);
#ifndef ONLINE_JUDGE
  freopen("inp", "r", stdin);
  freopen("out", "w", stdout);
#endif
  int test_case = 1;
  cin >> test_case;
  FOR(i, 0, test_case, 1) { solve(); }
  return 0;
}

int mpow(int base, int exp) {
  base %= mod;
  int result = 1;
  while (exp > 0) {
    if (exp & 1)
      result = ((ll)result * base) % mod;
    base = ((ll)base * base) % mod;
    exp >>= 1;
  }
  return result;
}

void ipgraph(int n, int m) {
  int i, u, v;
  while (m--) {
    cin >> u >> v;
    u--, v--;
    g[u].pb(v);
    g[v].pb(u);
  }
}

void dfs(int u, int par) {
  for (int v : g[u]) {
    if (v == par)
      continue;
    dfs(v, u);
  }
}
endsnippet
